# LLM chat template
[[instructions]]
role = "user"
content = """
This a FORTRAN module:

module example_mod
  use types
  use nf_mod
  implict none

public
    integer,parameter:: nloop=2, fn=-5
    real(dp),parameter:: zip=0._dp
    real(dp),parameter:: one=1._dp
    complex(dp),parameter:: im=(zip,one)
    logical :: myflag
    real(dp) :: tau(-nf:nf)=[1._dp,-1._dp,1._dp,-1._dp,1._dp,0._dp,-1._dp,1._dp,-1._dp,1._dp,-1._dp]
    real(dp) :: l(nf),le
    save

end module example_mod
"""

[[instructions]]
role = "assistant"
content = """
This is the corresponding C++ header file:

#ifndef EXAMPLE_MOD
#define EXAMPLE_MOD

#include<nf_mod.hpp>

namespace example_mod {
  using namespace nf_mod;

  const int nloop = 2;
  const int fn = -5;
  const double zip = 0.0;
  const double one = 1.0;
  bool myflag;
  const std::complex<double> im(zip, one);
  double tau[2*nf+1] = {1.0, -1.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0, 1.0, -1.0};
  double l[nf];
  double le;
}

extern "C" {
  double* example_mod_tau() {
    return example_mod::tau;
  }
  double* example_mod_l() {
    return exmaple_mod::l;
  }
  double* example_mod_le() {
    return &example_mod::le;
  }
  logical* example_mod_myflag() {
    return &example_mod::myflg;
  }
}

#endif
"""
